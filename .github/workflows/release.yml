# Publish package on release branch if it's tagged with 'v*'

name: build & release

on:
  push:
    branches: [master]
    tags:
      - 'v*'

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      deployments: write
      packages: write
      issues: write
      pull-requests: write
      pages: write
      repository-projects: write
      actions: write
      checks: write
      discussions: write
      security-events: write
      statuses: write

    strategy:
      matrix:
        python-versions: ['3.11']

    outputs:
      package_version: ${{ steps.variables_step.outputs.package_version }}
      package_name: ${{ steps.variables_step.outputs.package_name }}
      repo_name: ${{ steps.variables_step.outputs.repo_name }}
      repo_owner: ${{ steps.variables_step.outputs.repo_owner }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: build change log
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.7.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox-gh-actions poetry

      - name: Declare variables for convenient use
        id: variables_step
        run: |
          echo "::set-output name=repo_owner::${GITHUB_REPOSITORY%/*}"
          echo "::set-output name=repo_name::${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=package_name::`poetry version | awk '{print $1}'`"
          echo "::set-output name=package_version::`poetry version --short`"
        shell: bash

      - name: Build wheels and source tarball
        run: |
          poetry lock
          poetry build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: publish to PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
            skip-existing: true
