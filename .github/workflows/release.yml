name: build & release

on:
  push:
    branches: [master]
    tags:
      - 'v*'

  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  deployments: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  repository-projects: write
  actions: write
  checks: write
  discussions: write
  security-events: write
  statuses: write

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-versions: ['3.11']

    outputs:
      package_version: ${{ steps.variables_step.outputs.package_version }}
      package_name: ${{ steps.variables_step.outputs.package_name }}
      repo_name: ${{ steps.variables_step.outputs.repo_name }}
      repo_owner: ${{ steps.variables_step.outputs.repo_owner }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: build change log
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3.7.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox-gh-actions poetry

      - name: Declare variables for convenient use
        id: variables_step
        run: |
          echo "repo_owner=${GITHUB_REPOSITORY%/*}" >> "$GITHUB_OUTPUT"
          echo "repo_name=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_OUTPUT"
          PACKAGE_NAME=$(poetry version | awk '{print $1}')
          echo "package_name=${PACKAGE_NAME}" >> "$GITHUB_OUTPUT"
          PACKAGE_VERSION=$(poetry version --short)
          echo "package_version=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Build wheels and source tarball
        run: |
          poetry lock
          poetry build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.variables_step.outputs.package_version }}
          release_name: Release v${{ steps.variables_step.outputs.package_version }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: publish to PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
            skip-existing: true
